"use strict";let storage={currentFormat:"YYYY-MM-DD",currentMonth:null,longPeriod:!1,tableEvents:null,startDate:null,endDate:null,outputDate:null,needSorting:!1,currentEvent:null,previosStyleBorder:""};function setUpButtons(){document.querySelector(".block-header__btn-add").addEventListener("click",addEvent),document.querySelector(".block-header__btn-update").addEventListener("click",updateEvent),document.querySelector(".block-header__find_field").addEventListener("keyup",fieldFindEvents),document.querySelector(".block-header__find_btn-clear").addEventListener("click",fieldFindBtnClear),document.querySelector(".section-dates__select-period_month-minus").addEventListener("click",monthMinus),document.querySelector(".section-dates__select-period_month-plus").addEventListener("click",monthPlus),document.querySelector(".section-dates__select-period_today").addEventListener("click",setToday),document.querySelector(".add-events__body_btn-close").addEventListener("click",addEventBtnClose),document.querySelector(".add-events__body_btn-create").addEventListener("click",addEventBtnCreate),document.querySelector(".add-events__body_btn-ok").addEventListener("click",addEventBtnOk),document.querySelector(".add-events__body_btn-delete").addEventListener("click",addEventBtnDelete);let e=document.querySelectorAll(".section-dates__table_col");for(let t=0;t<e.length;t++)e[t].addEventListener("dblclick",editEvent)}function addEvent(){let e=document.querySelector(".block-header__btn-add"),t=document.querySelector(".add-events");removeAllArrows(t),t.classList.add("top"),document.querySelector(".add-events__body_btn-create").style.display="block",document.querySelector(".add-events__body_btn-ok").style.display="none",document.querySelector(".add-events__body_btn-delete").style.display="none",t.style.top=e.offsetTop+e.offsetHeight+10+"px",t.style.left=e.offsetLeft+"px",t.style.height="300px",t.style.width="350px",t.style.display="block"}function addEventBtnClose(){closeAddEvent(),storage.currentEvent.style.border=storage.previosStyleBorder}function addEventBtnCreate(){verifeEvent()&&(createEvent(),closeAddEvent())}function addEventBtnOk(){let e=toFormEvent(),t=+storage.currentEvent.getAttribute("data-array"),n=e.date!==storage.tableEvents[t].date;saveEvent(e,t),closeAddEvent(),storage.currentEvent.style.border=storage.previosStyleBorder,n&&(storage.currentEvent.classList.remove("event"),storage.currentEvent.querySelector(".section-dates__table_col-event").textContent="",storage.currentEvent.querySelector(".section-dates__table_col-participant").textContent="",storage.currentEvent.removeAttribute("data-array"))}function addEventBtnDelete(){let e=+storage.currentEvent.getAttribute("data-array"),t='Удалить событие "'+storage.tableEvents[e].title+'" '+storage.tableEvents[e].date+"!";!0===confirm(t)&&(storage.currentEvent.classList.remove("event"),storage.currentEvent.querySelector(".section-dates__table_col-event").textContent="",storage.currentEvent.querySelector(".section-dates__table_col-participant").textContent="",deleteEvent(),closeAddEvent())}function editEvent(e){let t=null;for(let n=0;n<e.path.length;n++)if(e.path[n].classList.contains("section-dates__table_col")){t=e.path[n];break}if(t.classList.contains("event")){storage.previosStyleBorder=window.getComputedStyle(t).border,t.style.border="2px solid green";let e=+t.getAttribute("data-array"),n=document.querySelector(".add-events");document.querySelector(".add-events__body_btn-create").style.display="none",document.querySelector(".add-events__body_btn-ok").style.display="inline-block",document.querySelector(".add-events__body_btn-delete").style.display="inline-block";let o=window.innerHeight,a=window.innerWidth,r=t.offsetTop,l=t.offsetLeft,s=t.offsetHeight,d=t.offsetWidth,i=300,c=350,u=0,v=0;removeAllArrows(n),u=r,r+i<=o?(u=r,n.querySelector(".arrow").style.top="10%"):(u=r+s-i,n.querySelector(".arrow").style.top="85%"),l+d+c<=a?(v=l+d+10,n.classList.add("left")):(v=l-c-10,n.classList.add("right")),n.style.top=u+"px",n.style.left=v+"px",n.style.height=i+"px",n.style.width=c+"px",n.style.display="block",n.querySelector(".add-events__body_title-field").value=storage.tableEvents[e].title,n.querySelector(".add-events__body_date-field").value=moment(storage.tableEvents[e].date).format("YYYY-MM-DDThh:mm"),n.querySelector(".add-events__body_participant-field").value=readListParticipants(e),storage.tableEvents[e].description&&(n.querySelector(".add-events__body_description-field").value=storage.tableEvents[e].description),storage.currentEvent=t}}function updateEvent(){localStorage.setItem("arrayEvents",JSON.stringify(storage.tableEvents))}function monthMinus(){let e=storage.longPeriod?6:5;storage.currentMonth=moment(storage.currentMonth).add(-1,"month"),calculateDates(),correctLayoutTable(e),outputPeriod(),sortTableEvents(),fillTable()}function monthPlus(){let e=storage.longPeriod?6:5;storage.currentMonth=moment(storage.currentMonth).add(1,"month"),calculateDates(),correctLayoutTable(e),outputPeriod(),sortTableEvents(),fillTable()}function setToday(){let e=storage.longPeriod?6:5;storage.currentMonth=moment().date(1).hours(0).minutes(0).seconds(0),calculateDates(),correctLayoutTable(e),outputPeriod(),sortTableEvents(),fillTable()}function fieldFindEvents(e){let t=document.querySelector(".block-header__find_field").value,n=document.querySelector(".block-header__find_btn-clear");27===e.keyCode?(document.querySelector(".block-header__find_field").value="",n.style.color="#fff",hideFindEvents()):t.length<3?(n.style.color="#fff",hideFindEvents()):(n.style.color="#000",findEvents())}function fieldFindBtnClear(){document.querySelector(".block-header__find_field").value="",hideFindEvents();let e=document.querySelector(".block-header__find_btn-clear");e.style.color="#fff",e.blur()}function outputPeriod(){document.querySelector(".section-dates__select-period_month-text").textContent=getSelectedPeriod()}function getSelectedPeriod(){return capitalizeFirstLetter(moment(storage.currentMonth).locale("ru").format("MMMM YYYY"))}function buildLayoutTable(){let e=document.querySelector(".section-dates__table"),t=storage.longPeriod?6:5;for(let n=0;n<t;n++){let t=generateTableRow();t.classList.add("section-dates__table_row"),e.appendChild(t)}}function generateTableRow(){let e=document.createElement("div");for(let t=0;t<7;t++){let t=generateTableRowCol();t.classList.add("section-dates__table_col"),e.appendChild(t)}return e}function generateTableRowCol(){let e=document.createElement("div"),t=document.createElement("span"),n=document.createElement("div"),o=document.createElement("div");return n.classList.add("section-dates__table_col-event"),o.classList.add("section-dates__table_col-participant"),e.appendChild(t),e.appendChild(n),e.appendChild(o),storage.outputDate.add(1,"days"),e}function correctLayoutTable(e){let t=document.querySelector(".section-dates__table"),n=storage.longPeriod?6:5;if(n>e){let e=generateTableRow();e.classList.add("section-dates__table_row"),t.appendChild(e)}else if(n<e){generateTableRow();t.removeChild(t.lastChild)}}function fillTable(){storage.outputDate=moment(storage.startDate);let e=0,t=findFirstEventIndex(storage.outputDate),n=document.querySelector(".section-dates__table");for(let o=0;o<n.children.length;o++){let a=n.children[o];for(let n=0;n<a.children.length;n++){let o=a.children[n];o.classList.remove("today"),o.classList.remove("event"),o.removeAttribute("data-array"),equalToday(storage.outputDate.format(storage.currentFormat))&&o.classList.add("today");let r=o.querySelector("span"),l="";e<7&&(l=capitalizeFirstLetter(moment(storage.outputDate).locale("ru").format("dddd")+", ")),r.textContent=l,r.textContent+=storage.outputDate.date();let s=o.querySelector(".section-dates__table_col-event");s.textContent="";let d=o.querySelector(".section-dates__table_col-participant");d.textContent="",-1!==t&&t<storage.tableEvents.length&&equalDates(t)&&(s.textContent=storage.tableEvents[t].title,o.classList.add("event"),o.setAttribute("data-array",t),addParticipants(d,t),t++),e++,storage.outputDate.add(1,"days")}}}function addParticipants(e,t){let n=readListParticipants(t)+".";e.textContent=n}function readListParticipants(e){let t=storage.tableEvents[e].participants.length,n="";for(let o=0;o<t;o++)n+=storage.tableEvents[e].participants[o].name,void 0!==storage.tableEvents[e].participants[o].surname&&(n+=" "+storage.tableEvents[e].participants[o].surname),o===t-1||(n+=", ");return n}function hideFindEvents(){document.querySelector(".find-events").style.display="none"}function findEvents(){let e=document.querySelector(".block-header__find_find"),t=searchEvents();t.style.top=e.offsetTop+e.offsetHeight+9+"px",t.style.left=e.offsetLeft+"px",t.style.display="block"}function searchEvents(){let e=document.querySelector(".find-events"),t=getListEvents(),n=document.querySelector(".block-header__find_field").value.toLowerCase(),o=storage.tableEvents.filter(e=>-1!==e.title.toLowerCase().search(n));for(let e=0;e<o.length;e++){let n=document.createElement("div");n.classList.add("find-events__list_row");let a=document.createElement("div");a.textContent=o[e].title,a.classList.add("find-events__list_row-title");let r=document.createElement("div");r.textContent=moment(o[e].date).format("Do MMMM"),r.classList.add("find-events__list_row-Info"),n.appendChild(a),n.appendChild(r),t.appendChild(n)}return e.appendChild(t),e}function getListEvents(){let e=document.querySelector(".find-events__list");for(;e.hasChildNodes();)e.removeChild(e.lastChild);return e}function calculateDates(){let e=-(storage.currentMonth.day()-1);0===storage.currentMonth.day()&&(e=-6),storage.startDate=moment(storage.currentMonth).add(e,"days"),storage.endDate=moment(storage.startDate).add(42,"days").add(-1,"seconds"),storage.outputDate=moment(storage.startDate),storage.endDate.date()>6?(storage.endDate.add(-7,"days"),storage.longPeriod=!1):storage.longPeriod=!0}function capitalizeFirstLetter(e){return e.charAt(0).toUpperCase()+e.slice(1)}function closeAddEvent(){let e=document.querySelector(".add-events");document.querySelector(".add-events__body_title-field").value="",document.querySelector(".add-events__body_date-field").value="",document.querySelector(".add-events__body_participant-field").value="",document.querySelector(".add-events__body_description-field").value="",e.style.display="none"}function createEvent(){let e=toFormEvent(),t=findDateEvent(e);-1===t&&(t=storage.tableEvents.length),saveEvent(e,t,!0)}function deleteEvent(){let e=+storage.currentEvent.getAttribute("data-array");storage.tableEvents.splice(e,1),localStorage.setItem("arrayEvents",JSON.stringify(storage.tableEvents)),storage.currentEvent.style.border=storage.previosStyleBorder}function equalDates(e){return moment(storage.tableEvents[e].date).hours(0).minutes(0).seconds(0).format(storage.currentFormat)===moment(storage.outputDate).hours(0).minutes(0).seconds(0).format(storage.currentFormat)}function equalToday(e){return moment().hours(0).minutes(0).seconds(0).format(storage.currentFormat)===e}function findDateEvent(e){let t=-1;for(let n=0;n<storage.tableEvents.length;n++)if(moment(storage.tableEvents[n].date).hours(0).minutes(0).seconds(0).format(storage.currentFormat)===moment(e.date).hours(0).minutes(0).seconds(0).format(storage.currentFormat)){t=n;break}return t}function findFirstEventIndex(e){let t=-1;for(let n=0;n<storage.tableEvents.length;n++)if(moment(storage.tableEvents[n].date)>=moment(e)){t=n;break}return t}function readData(){if(storage.tableEvents=JSON.parse(localStorage.getItem("arrayEvents")),null===storage.tableEvents){let e=new XMLHttpRequest;e.onreadystatechange=function(){4===e.readyState&&200===e.status&&(storage.tableEvents=JSON.parse(e.responseText).events,sortTableEvents(!0),fillTable())},e.open("GET","./events.json",!0),e.send()}else sortTableEvents(!0),fillTable()}function removeAllArrows(e){e.classList.remove("top"),e.classList.remove("left"),e.classList.remove("bottom"),e.classList.remove("right")}function saveEvent(e,t,n=!1){storage.tableEvents[t]=e,localStorage.setItem("arrayEvents",JSON.stringify(storage.tableEvents)),updateTableCol(t),storage.needSorting=n}function sortTableEvents(e=!1){(storage.needSorting||e)&&(storage.tableEvents.sort((e,t)=>moment(e.date)-moment(t.date)),storage.needSorting=!1)}function toFormEvent(){let e={id:0,title:document.querySelector(".add-events__body_title-field").value,date:document.querySelector(".add-events__body_date-field").value,participants:[],description:document.querySelector(".add-events__body_description-field").value},t=document.querySelector(".add-events__body_participant-field").value.split(",");for(let n=0;n<t.length;n++){let o=t[n].trim().split(" ");try{e.participants.push({id:0,name:o[0],surname:o[1]})}catch{}}return e}function updateTableCol(e){storage.outputDate=moment(storage.startDate);let t=document.querySelector(".section-dates__table");for(let n=0;n<t.children.length;n++){let o=t.children[n];for(let t=0;t<o.children.length;t++){let n=o.children[t];equalDates(e)&&addNewEvent(n,e),storage.outputDate.add(1,"days")}}}function addNewEvent(e,t){e.classList.add("event"),e.setAttribute("data-array",t);let n=e.querySelector(".section-dates__table_col-event");n.textContent="";let o=e.querySelector(".section-dates__table_col-participant");o.textContent="",n.textContent=storage.tableEvents[t].title,addParticipants(o,t)}function verifeEvent(){if(!document.querySelector(".add-events__body_title-field").value)return alert("Empty title!"),!1;let e=document.querySelector(".add-events__body_date-field");return!!e.value||(e.validationMessage?alert(e.validationMessage):alert("Empty date!"),!1)}window.onload=function(){storage.currentMonth=moment().date(1).hours(0).minutes(0).seconds(0),calculateDates(),buildLayoutTable(),outputPeriod(),readData(),setUpButtons()};
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsic3RvcmFnZSIsImN1cnJlbnRGb3JtYXQiLCJjdXJyZW50TW9udGgiLCJsb25nUGVyaW9kIiwidGFibGVFdmVudHMiLCJzdGFydERhdGUiLCJlbmREYXRlIiwib3V0cHV0RGF0ZSIsIm5lZWRTb3J0aW5nIiwiY3VycmVudEV2ZW50IiwicHJldmlvc1N0eWxlQm9yZGVyIiwic2V0VXBCdXR0b25zIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiYWRkRXZlbnRMaXN0ZW5lciIsImFkZEV2ZW50IiwidXBkYXRlRXZlbnQiLCJmaWVsZEZpbmRFdmVudHMiLCJmaWVsZEZpbmRCdG5DbGVhciIsIm1vbnRoTWludXMiLCJtb250aFBsdXMiLCJzZXRUb2RheSIsImFkZEV2ZW50QnRuQ2xvc2UiLCJhZGRFdmVudEJ0bkNyZWF0ZSIsImFkZEV2ZW50QnRuT2siLCJhZGRFdmVudEJ0bkRlbGV0ZSIsInRhYmxlQ29sIiwicXVlcnlTZWxlY3RvckFsbCIsImkiLCJsZW5ndGgiLCJlZGl0RXZlbnQiLCJidG5BZGRFdmVudCIsInJlbW92ZUFsbEFycm93cyIsImNsYXNzTGlzdCIsImFkZCIsInN0eWxlIiwiZGlzcGxheSIsInRvcCIsIm9mZnNldFRvcCIsIm9mZnNldEhlaWdodCIsImxlZnQiLCJvZmZzZXRMZWZ0IiwiaGVpZ2h0Iiwid2lkdGgiLCJjbG9zZUFkZEV2ZW50IiwiYm9yZGVyIiwidmVyaWZlRXZlbnQiLCJjcmVhdGVFdmVudCIsIm5ld0V2ZW50IiwidG9Gb3JtRXZlbnQiLCJpbmRleEV2ZW50IiwiZ2V0QXR0cmlidXRlIiwibmVlZENsZWFyRXZlbnQiLCJkYXRlIiwic2F2ZUV2ZW50IiwicmVtb3ZlIiwidGV4dENvbnRlbnQiLCJyZW1vdmVBdHRyaWJ1dGUiLCJjdXJyZW50SW5kZXhFdmVudCIsImNvbmZpcm1UZXh0IiwidGl0bGUiLCJjb25maXJtIiwiZGVsZXRlRXZlbnQiLCJlIiwiZmluZEV2ZW50IiwicGF0aCIsImNvbnRhaW5zIiwid2luZG93IiwiZ2V0Q29tcHV0ZWRTdHlsZSIsImluZGV4QXJyYXlFdmVudHMiLCJ3aW5kb3dJbm5lckhlaWdodCIsImlubmVySGVpZ2h0Iiwid2luZG93SW5uZXJXaWR0aCIsImlubmVyV2lkdGgiLCJmaW5kRXZlbnRPZmZzZXRUb3AiLCJmaW5kRXZlbnRPZmZzZXRMZWZ0IiwiZmluZEV2ZW50T2Zmc2V0SGVpZ2h0IiwiZmluZEV2ZW50T2Zmc2V0V2lkdGgiLCJvZmZzZXRXaWR0aCIsImVkaXRFdmVudEhlaWdodCIsImVkaXRFdmVudFdpZHRoIiwiZWRpdEV2ZW50VG9wIiwiZWRpdEV2ZW50TGVmdCIsInZhbHVlIiwibW9tZW50IiwiZm9ybWF0IiwicmVhZExpc3RQYXJ0aWNpcGFudHMiLCJkZXNjcmlwdGlvbiIsImxvY2FsU3RvcmFnZSIsInNldEl0ZW0iLCJKU09OIiwic3RyaW5naWZ5IiwicHJldk1heFJvd3MiLCJjYWxjdWxhdGVEYXRlcyIsImNvcnJlY3RMYXlvdXRUYWJsZSIsIm91dHB1dFBlcmlvZCIsInNvcnRUYWJsZUV2ZW50cyIsImZpbGxUYWJsZSIsImhvdXJzIiwibWludXRlcyIsInNlY29uZHMiLCJzZWFyY2hpbmdUZXh0IiwiYnRuQ2xlYXIiLCJrZXlDb2RlIiwiY29sb3IiLCJoaWRlRmluZEV2ZW50cyIsImZpbmRFdmVudHMiLCJibHVyIiwiZ2V0U2VsZWN0ZWRQZXJpb2QiLCJjYXBpdGFsaXplRmlyc3RMZXR0ZXIiLCJsb2NhbGUiLCJidWlsZExheW91dFRhYmxlIiwic2VjdGlvbkRhdGVzVGFibGUiLCJtYXhSb3dzIiwic2VjdGlvbkRhdGVzVGFibGVSb3ciLCJnZW5lcmF0ZVRhYmxlUm93IiwiYXBwZW5kQ2hpbGQiLCJ0YWJsZVJvdyIsImNyZWF0ZUVsZW1lbnQiLCJ5Iiwic2VjdGlvbkRhdGVzVGFibGVDb2wiLCJnZW5lcmF0ZVRhYmxlUm93Q29sIiwidGFibGVSb3dDb2wiLCJzcGFuIiwiZGl2MSIsImRpdjIiLCJyZW1vdmVDaGlsZCIsImxhc3RDaGlsZCIsImNvdW50RGF0ZSIsImZpcnN0RXZlbnRJbmRleCIsImZpbmRGaXJzdEV2ZW50SW5kZXgiLCJjdXJUYWJsZSIsInIiLCJjaGlsZHJlbiIsImNoaWxkcmVuUm93IiwiYyIsImN1clRhYmxlQ29sIiwiZXF1YWxUb2RheSIsImN1clRhYmxlQ29sU3BhbiIsImN1cnJlbnREYXkiLCJjdXJUYWJsZUNvbEV2ZW50IiwiY3VyVGFibGVDb2xQYXJ0aWNpcGFudHMiLCJlcXVhbERhdGVzIiwic2V0QXR0cmlidXRlIiwiYWRkUGFydGljaXBhbnRzIiwibGlzdFBhcnRpY2lwYW50cyIsInF1YW50UGFydGljaXBhbnRzIiwicGFydGljaXBhbnRzIiwibmFtZSIsInVuZGVmaW5lZCIsInN1cm5hbWUiLCJzZWFyY2hFdmVudHMiLCJmaW5kRXZlbnRzTGlzdCIsImdldExpc3RFdmVudHMiLCJzZWFyY2hWYWx1ZSIsInRvTG93ZXJDYXNlIiwicmVzdWx0U2VhcmNoIiwiZmlsdGVyIiwiaXRlbSIsInNlYXJjaCIsImZpbmRFdmVudHNSb3ciLCJyb3dUaXRsZSIsInJvd0luZm8iLCJoYXNDaGlsZE5vZGVzIiwic2hpZnREYXRlIiwiZGF5Iiwic3RyaW5nIiwiY2hhckF0IiwidG9VcHBlckNhc2UiLCJzbGljZSIsImZpbmREYXRlRXZlbnQiLCJzcGxpY2UiLCJjdXJEYXRlIiwiZXZlbnQiLCJyZXN1bHQiLCJjdXJJbmRleCIsInJlYWREYXRhIiwicGFyc2UiLCJnZXRJdGVtIiwieGhyIiwiWE1MSHR0cFJlcXVlc3QiLCJvbnJlYWR5c3RhdGVjaGFuZ2UiLCJyZWFkeVN0YXRlIiwic3RhdHVzIiwicmVzcG9uc2VUZXh0IiwiZXZlbnRzIiwib3BlbiIsInNlbmQiLCJ1cGRhdGVUYWJsZUNvbCIsIm5lY2Vzc2FyaWx5Iiwic29ydCIsImZpcnN0Iiwic2Vjb25kIiwiaWQiLCJhcnJQYXJ0aXNpcGFudHMiLCJzcGxpdCIsImFyck5hbWUiLCJ0cmltIiwicHVzaCIsImFkZE5ld0V2ZW50IiwiYWxlcnQiLCJkYXRlVGltZSIsInZhbGlk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RUFBQUQsU0FBQUUsR0FFQU8sV0FBQTVGLElBQ0FxSixZQUFBL0QsRUFBQXRGLEdBR0FsRCxRQUFBTyxXQUFBMkIsSUFBQSxFQUFBLFVBS0EsU0FBQXFLLFlBQUEvRCxFQUFBdEYsR0FDQXNGLEVBQUF2RyxVQUFBQyxJQUFBLFNBRUFzRyxFQUFBTyxhQUFBLGFBQUE3RixHQUVBLElBQUEwRixFQUFBSixFQUFBM0gsY0FBQSxtQ0FDQStILEVBQUFwRixZQUFBLEdBQ0EsSUFBQXFGLEVBQUFMLEVBQUEzSCxjQUFBLHlDQUNBZ0ksRUFBQXJGLFlBQUEsR0FFQW9GLEVBQUFwRixZQUFBeEQsUUFBQUksWUFBQThDLEdBQUFVLE1BRUFvRixnQkFBQUgsRUFBQTNGLEdBR0EsU0FBQUosY0FDQSxJQUFBbEMsU0FBQUMsY0FBQSxpQ0FBQXNFLE1BR0EsT0FGQXFILE1BQUEsaUJBRUEsRUFHQSxJQUFBQyxFQUFBN0wsU0FBQUMsY0FBQSxnQ0FFQSxRQUFBNEwsRUFBQXRILFFBQ0FzSCxFQUFBQyxrQkFDQUYsTUFBQUMsRUFBQUMsbUJBR0FGLE1BQUEsZ0JBR0EsR0Evc0JBckksT0FBQXdJLE9BQUEsV0FDQTNNLFFBQUFFLGFBQUFrRixTQUFBL0IsS0FBQSxHQUFBNkMsTUFBQSxHQUFBQyxRQUFBLEdBQUFDLFFBQUEsR0FFQVAsaUJBQ0FrQixtQkFDQWhCLGVBQ0FpRixXQUNBcksiLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xyXG5cclxuLy8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcbi8vIHZhclxyXG5cclxubGV0IHN0b3JhZ2UgPSB7XHJcbiAgICBjdXJyZW50Rm9ybWF0OiAnWVlZWS1NTS1ERCcsXHJcbiAgICBjdXJyZW50TW9udGg6IG51bGwsXHJcbiAgICBsb25nUGVyaW9kOiBmYWxzZSxcclxuICAgIHRhYmxlRXZlbnRzOiBudWxsLFxyXG4gICAgc3RhcnREYXRlOiBudWxsLFxyXG4gICAgZW5kRGF0ZTogbnVsbCxcclxuICAgIG91dHB1dERhdGU6IG51bGwsXHJcbiAgICBuZWVkU29ydGluZzogZmFsc2UsXHJcbiAgICBjdXJyZW50RXZlbnQ6IG51bGwsXHJcbiAgICBwcmV2aW9zU3R5bGVCb3JkZXI6ICcnXHJcbn1cclxuXHJcbi8vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG5cclxud2luZG93Lm9ubG9hZCA9IGZ1bmN0aW9uICgpIHtcclxuICAgIHN0b3JhZ2UuY3VycmVudE1vbnRoID0gbW9tZW50KCkuZGF0ZSgxKS5ob3VycygwKS5taW51dGVzKDApLnNlY29uZHMoMCk7XHJcblxyXG4gICAgY2FsY3VsYXRlRGF0ZXMoKTtcclxuICAgIGJ1aWxkTGF5b3V0VGFibGUoKTtcclxuICAgIG91dHB1dFBlcmlvZCgpO1xyXG4gICAgcmVhZERhdGEoKTtcclxuICAgIHNldFVwQnV0dG9ucygpO1xyXG59XHJcblxyXG4vLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuLy8gU2V0dXBcclxuXHJcbmZ1bmN0aW9uIHNldFVwQnV0dG9ucygpIHtcclxuICAgIGxldCBidG5BZGQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYmxvY2staGVhZGVyX19idG4tYWRkJyk7XHJcbiAgICBidG5BZGQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBhZGRFdmVudCk7XHJcblxyXG4gICAgbGV0IGJ0blVwZGF0ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5ibG9jay1oZWFkZXJfX2J0bi11cGRhdGUnKTtcclxuICAgIGJ0blVwZGF0ZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHVwZGF0ZUV2ZW50KTtcclxuXHJcbiAgICBsZXQgZmllbGRGaW5kID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmJsb2NrLWhlYWRlcl9fZmluZF9maWVsZCcpO1xyXG4gICAgZmllbGRGaW5kLmFkZEV2ZW50TGlzdGVuZXIoJ2tleXVwJywgZmllbGRGaW5kRXZlbnRzKTtcclxuXHJcbiAgICBsZXQgYnRuQ2xlYXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYmxvY2staGVhZGVyX19maW5kX2J0bi1jbGVhcicpO1xyXG4gICAgYnRuQ2xlYXIuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmaWVsZEZpbmRCdG5DbGVhcik7XHJcblxyXG4gICAgbGV0IGJ0bk1vbnRoTWludXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2VjdGlvbi1kYXRlc19fc2VsZWN0LXBlcmlvZF9tb250aC1taW51cycpO1xyXG4gICAgYnRuTW9udGhNaW51cy5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIG1vbnRoTWludXMpO1xyXG5cclxuICAgIGxldCBidG5Nb250aFBsdXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2VjdGlvbi1kYXRlc19fc2VsZWN0LXBlcmlvZF9tb250aC1wbHVzJyk7XHJcbiAgICBidG5Nb250aFBsdXMuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBtb250aFBsdXMpO1xyXG5cclxuICAgIGxldCBidG5Ub2RheSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zZWN0aW9uLWRhdGVzX19zZWxlY3QtcGVyaW9kX3RvZGF5Jyk7XHJcbiAgICBidG5Ub2RheS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHNldFRvZGF5KTtcclxuXHJcbiAgICBsZXQgYnRuQ2xvc2UgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYWRkLWV2ZW50c19fYm9keV9idG4tY2xvc2UnKTtcclxuICAgIGJ0bkNsb3NlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgYWRkRXZlbnRCdG5DbG9zZSk7XHJcblxyXG4gICAgbGV0IGJ0bkNyZWF0ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5hZGQtZXZlbnRzX19ib2R5X2J0bi1jcmVhdGUnKTtcclxuICAgIGJ0bkNyZWF0ZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGFkZEV2ZW50QnRuQ3JlYXRlKTtcclxuXHJcbiAgICBsZXQgYnRuT2sgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYWRkLWV2ZW50c19fYm9keV9idG4tb2snKTtcclxuICAgIGJ0bk9rLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgYWRkRXZlbnRCdG5Payk7XHJcblxyXG4gICAgbGV0IGJ0bkRlbGV0ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5hZGQtZXZlbnRzX19ib2R5X2J0bi1kZWxldGUnKTtcclxuICAgIGJ0bkRlbGV0ZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGFkZEV2ZW50QnRuRGVsZXRlKTtcclxuXHJcbiAgICBsZXQgdGFibGVDb2wgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuc2VjdGlvbi1kYXRlc19fdGFibGVfY29sJyk7XHJcbiAgICBmb3IgKGxldCBpID0wOyBpIDwgdGFibGVDb2wubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICB0YWJsZUNvbFtpXS5hZGRFdmVudExpc3RlbmVyKCdkYmxjbGljaycsIGVkaXRFdmVudCk7XHJcbiAgICB9XHJcbn1cclxuXHJcbi8vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG4vLyBFdmVudHNcclxuXHJcbmZ1bmN0aW9uIGFkZEV2ZW50KCkge1xyXG4gICAgbGV0IGJ0bkFkZEV2ZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmJsb2NrLWhlYWRlcl9fYnRuLWFkZCcpO1xyXG4gICAgbGV0IGFkZEV2ZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmFkZC1ldmVudHMnKTtcclxuXHJcbiAgICAvLyBTZXQgYXJyb3dcclxuICAgIHJlbW92ZUFsbEFycm93cyhhZGRFdmVudCk7XHJcbiAgICBhZGRFdmVudC5jbGFzc0xpc3QuYWRkKCd0b3AnKTtcclxuXHJcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYWRkLWV2ZW50c19fYm9keV9idG4tY3JlYXRlJykuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XHJcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYWRkLWV2ZW50c19fYm9keV9idG4tb2snKS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmFkZC1ldmVudHNfX2JvZHlfYnRuLWRlbGV0ZScpLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcblxyXG4gICAgYWRkRXZlbnQuc3R5bGUudG9wID0gKGJ0bkFkZEV2ZW50Lm9mZnNldFRvcCArIGJ0bkFkZEV2ZW50Lm9mZnNldEhlaWdodCArIDEwKSArICdweCc7XHJcbiAgICBhZGRFdmVudC5zdHlsZS5sZWZ0ID0gYnRuQWRkRXZlbnQub2Zmc2V0TGVmdCArICdweCc7XHJcbiAgICBhZGRFdmVudC5zdHlsZS5oZWlnaHQgPSAnMzAwcHgnO1xyXG4gICAgYWRkRXZlbnQuc3R5bGUud2lkdGggPSAnMzUwcHgnO1xyXG4gICAgYWRkRXZlbnQuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGFkZEV2ZW50QnRuQ2xvc2UoKSB7XHJcbiAgICBjbG9zZUFkZEV2ZW50KCk7XHJcblxyXG4gICAgc3RvcmFnZS5jdXJyZW50RXZlbnQuc3R5bGUuYm9yZGVyID0gc3RvcmFnZS5wcmV2aW9zU3R5bGVCb3JkZXI7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGFkZEV2ZW50QnRuQ3JlYXRlKCkge1xyXG4gICAgaWYgKHZlcmlmZUV2ZW50KCkpIHtcclxuICAgICAgICBjcmVhdGVFdmVudCgpO1xyXG4gICAgICAgIGNsb3NlQWRkRXZlbnQoKTtcclxuICAgIH1cclxufVxyXG5cclxuZnVuY3Rpb24gYWRkRXZlbnRCdG5PaygpIHtcclxuICAgIGxldCBuZXdFdmVudCA9IHRvRm9ybUV2ZW50KCk7XHJcblxyXG4gICAgbGV0IGluZGV4RXZlbnQgPSArc3RvcmFnZS5jdXJyZW50RXZlbnQuZ2V0QXR0cmlidXRlKCdkYXRhLWFycmF5Jyk7XHJcblxyXG4gICAgbGV0IG5lZWRDbGVhckV2ZW50ID0gKG5ld0V2ZW50LmRhdGUgIT09IHN0b3JhZ2UudGFibGVFdmVudHNbaW5kZXhFdmVudF0uZGF0ZSk7XHJcblxyXG4gICAgc2F2ZUV2ZW50KG5ld0V2ZW50LCBpbmRleEV2ZW50KTtcclxuXHJcbiAgICBjbG9zZUFkZEV2ZW50KCk7XHJcblxyXG4gICAgc3RvcmFnZS5jdXJyZW50RXZlbnQuc3R5bGUuYm9yZGVyID0gc3RvcmFnZS5wcmV2aW9zU3R5bGVCb3JkZXI7XHJcblxyXG4gICAgaWYgKG5lZWRDbGVhckV2ZW50KSB7XHJcbiAgICAgICAgLy8gQ2xlYXIgZXZlbnRcclxuICAgICAgICBzdG9yYWdlLmN1cnJlbnRFdmVudC5jbGFzc0xpc3QucmVtb3ZlKCdldmVudCcpO1xyXG4gICAgICAgIHN0b3JhZ2UuY3VycmVudEV2ZW50LnF1ZXJ5U2VsZWN0b3IoJy5zZWN0aW9uLWRhdGVzX190YWJsZV9jb2wtZXZlbnQnKS50ZXh0Q29udGVudCA9ICcnO1xyXG4gICAgICAgIHN0b3JhZ2UuY3VycmVudEV2ZW50LnF1ZXJ5U2VsZWN0b3IoJy5zZWN0aW9uLWRhdGVzX190YWJsZV9jb2wtcGFydGljaXBhbnQnKS50ZXh0Q29udGVudCA9ICcnO1xyXG4gICAgICAgIHN0b3JhZ2UuY3VycmVudEV2ZW50LnJlbW92ZUF0dHJpYnV0ZSgnZGF0YS1hcnJheScpO1xyXG4gICAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiBhZGRFdmVudEJ0bkRlbGV0ZSgpIHtcclxuICAgIGxldCBjdXJyZW50SW5kZXhFdmVudCA9ICtzdG9yYWdlLmN1cnJlbnRFdmVudC5nZXRBdHRyaWJ1dGUoJ2RhdGEtYXJyYXknKTtcclxuICAgIGxldCBjb25maXJtVGV4dCA9ICfQo9C00LDQu9C40YLRjCDRgdC+0LHRi9GC0LjQtSBcIicgKyBzdG9yYWdlLnRhYmxlRXZlbnRzW2N1cnJlbnRJbmRleEV2ZW50XS50aXRsZSArICdcIiAnICsgc3RvcmFnZS50YWJsZUV2ZW50c1tjdXJyZW50SW5kZXhFdmVudF0uZGF0ZSArICchJztcclxuICAgIGxldCBhbnN3ZXIgPSBjb25maXJtKGNvbmZpcm1UZXh0KTtcclxuXHJcbiAgICBpZiAoYW5zd2VyID09PSB0cnVlKSB7XHJcbiAgICAgICAgLy8gQ2xlYXIgZXZlbnRcclxuICAgICAgICBzdG9yYWdlLmN1cnJlbnRFdmVudC5jbGFzc0xpc3QucmVtb3ZlKCdldmVudCcpO1xyXG4gICAgICAgIHN0b3JhZ2UuY3VycmVudEV2ZW50LnF1ZXJ5U2VsZWN0b3IoJy5zZWN0aW9uLWRhdGVzX190YWJsZV9jb2wtZXZlbnQnKS50ZXh0Q29udGVudCA9ICcnO1xyXG4gICAgICAgIHN0b3JhZ2UuY3VycmVudEV2ZW50LnF1ZXJ5U2VsZWN0b3IoJy5zZWN0aW9uLWRhdGVzX190YWJsZV9jb2wtcGFydGljaXBhbnQnKS50ZXh0Q29udGVudCA9ICcnO1xyXG5cclxuICAgICAgICBkZWxldGVFdmVudCgpO1xyXG4gICAgICAgIGNsb3NlQWRkRXZlbnQoKTtcclxuICAgIH1cclxufVxyXG5cclxuZnVuY3Rpb24gZWRpdEV2ZW50KGUpIHtcclxuICAgIGxldCBmaW5kRXZlbnQgPSBudWxsO1xyXG5cclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZS5wYXRoLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgaWYgKGUucGF0aFtpXS5jbGFzc0xpc3QuY29udGFpbnMoJ3NlY3Rpb24tZGF0ZXNfX3RhYmxlX2NvbCcpKSB7XHJcbiAgICAgICAgICAgIGZpbmRFdmVudCA9IGUucGF0aFtpXTtcclxuICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGlmIChmaW5kRXZlbnQuY2xhc3NMaXN0LmNvbnRhaW5zKCdldmVudCcpKSB7XHJcbiAgICAgICAgc3RvcmFnZS5wcmV2aW9zU3R5bGVCb3JkZXIgPSB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShmaW5kRXZlbnQpLmJvcmRlcjtcclxuICAgICAgICBmaW5kRXZlbnQuc3R5bGUuYm9yZGVyID0gJzJweCBzb2xpZCBncmVlbic7XHJcblxyXG4gICAgICAgIGxldCBpbmRleEFycmF5RXZlbnRzID0gK2ZpbmRFdmVudC5nZXRBdHRyaWJ1dGUoJ2RhdGEtYXJyYXknKTtcclxuXHJcbiAgICAgICAgbGV0IGVkaXRFdmVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5hZGQtZXZlbnRzJyk7XHJcblxyXG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5hZGQtZXZlbnRzX19ib2R5X2J0bi1jcmVhdGUnKS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5hZGQtZXZlbnRzX19ib2R5X2J0bi1vaycpLnN0eWxlLmRpc3BsYXkgPSAnaW5saW5lLWJsb2NrJztcclxuICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYWRkLWV2ZW50c19fYm9keV9idG4tZGVsZXRlJykuc3R5bGUuZGlzcGxheSA9ICdpbmxpbmUtYmxvY2snO1xyXG5cclxuICAgICAgICBsZXQgd2luZG93SW5uZXJIZWlnaHQgPSB3aW5kb3cuaW5uZXJIZWlnaHQ7XHJcbiAgICAgICAgbGV0IHdpbmRvd0lubmVyV2lkdGggPSB3aW5kb3cuaW5uZXJXaWR0aDtcclxuXHJcbiAgICAgICAgLy8gQ3VycmVudCBwb3NpdGlvblxyXG4gICAgICAgIGxldCBmaW5kRXZlbnRPZmZzZXRUb3AgPSBmaW5kRXZlbnQub2Zmc2V0VG9wO1xyXG4gICAgICAgIGxldCBmaW5kRXZlbnRPZmZzZXRMZWZ0ID0gZmluZEV2ZW50Lm9mZnNldExlZnQ7XHJcbiAgICAgICAgbGV0IGZpbmRFdmVudE9mZnNldEhlaWdodCA9IGZpbmRFdmVudC5vZmZzZXRIZWlnaHQ7XHJcbiAgICAgICAgbGV0IGZpbmRFdmVudE9mZnNldFdpZHRoID0gZmluZEV2ZW50Lm9mZnNldFdpZHRoO1xyXG4gICAgICAgIFxyXG4gICAgICAgIGxldCBlZGl0RXZlbnRIZWlnaHQgPSAzMDA7XHJcbiAgICAgICAgbGV0IGVkaXRFdmVudFdpZHRoID0gMzUwO1xyXG5cclxuICAgICAgICAvLyBDYWxjdWxhdGUgY29vcmRpbmF0ZXNcclxuICAgICAgICBsZXQgZWRpdEV2ZW50VG9wID0gMDtcclxuICAgICAgICBsZXQgZWRpdEV2ZW50TGVmdCA9IDA7XHJcblxyXG4gICAgICAgIHJlbW92ZUFsbEFycm93cyhlZGl0RXZlbnQpO1xyXG5cclxuICAgICAgICBlZGl0RXZlbnRUb3AgPSBmaW5kRXZlbnRPZmZzZXRUb3A7XHJcblxyXG4gICAgICAgIGlmICgoZmluZEV2ZW50T2Zmc2V0VG9wICsgZWRpdEV2ZW50SGVpZ2h0KSA8PSB3aW5kb3dJbm5lckhlaWdodCkge1xyXG4gICAgICAgICAgICBlZGl0RXZlbnRUb3AgPSBmaW5kRXZlbnRPZmZzZXRUb3A7XHJcbiAgICAgICAgICAgIGVkaXRFdmVudC5xdWVyeVNlbGVjdG9yKCcuYXJyb3cnKS5zdHlsZS50b3AgPSAnMTAlJztcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIGVkaXRFdmVudFRvcCA9IGZpbmRFdmVudE9mZnNldFRvcCArIGZpbmRFdmVudE9mZnNldEhlaWdodCAtIGVkaXRFdmVudEhlaWdodDtcclxuICAgICAgICAgICAgZWRpdEV2ZW50LnF1ZXJ5U2VsZWN0b3IoJy5hcnJvdycpLnN0eWxlLnRvcCA9ICc4NSUnO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKChmaW5kRXZlbnRPZmZzZXRMZWZ0ICsgZmluZEV2ZW50T2Zmc2V0V2lkdGggKyBlZGl0RXZlbnRXaWR0aCkgPD0gd2luZG93SW5uZXJXaWR0aCkge1xyXG4gICAgICAgICAgICBlZGl0RXZlbnRMZWZ0ID0gZmluZEV2ZW50T2Zmc2V0TGVmdCArIGZpbmRFdmVudE9mZnNldFdpZHRoICsgMTA7XHJcbiAgICAgICAgICAgIGVkaXRFdmVudC5jbGFzc0xpc3QuYWRkKCdsZWZ0Jyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBlZGl0RXZlbnRMZWZ0ID0gZmluZEV2ZW50T2Zmc2V0TGVmdCAtIGVkaXRFdmVudFdpZHRoIC0gMTA7XHJcbiAgICAgICAgICAgIGVkaXRFdmVudC5jbGFzc0xpc3QuYWRkKCdyaWdodCcpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgZWRpdEV2ZW50LnN0eWxlLnRvcCA9IGVkaXRFdmVudFRvcCArICdweCc7XHJcbiAgICAgICAgZWRpdEV2ZW50LnN0eWxlLmxlZnQgPSBlZGl0RXZlbnRMZWZ0ICsgJ3B4JztcclxuICAgICAgICBlZGl0RXZlbnQuc3R5bGUuaGVpZ2h0ID0gZWRpdEV2ZW50SGVpZ2h0ICsgJ3B4JztcclxuICAgICAgICBlZGl0RXZlbnQuc3R5bGUud2lkdGggPSBlZGl0RXZlbnRXaWR0aCArICdweCc7XHJcbiAgICAgICAgZWRpdEV2ZW50LnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xyXG5cclxuICAgICAgICBlZGl0RXZlbnQucXVlcnlTZWxlY3RvcignLmFkZC1ldmVudHNfX2JvZHlfdGl0bGUtZmllbGQnKS52YWx1ZSA9IHN0b3JhZ2UudGFibGVFdmVudHNbaW5kZXhBcnJheUV2ZW50c10udGl0bGU7XHJcbiAgICAgICAgZWRpdEV2ZW50LnF1ZXJ5U2VsZWN0b3IoJy5hZGQtZXZlbnRzX19ib2R5X2RhdGUtZmllbGQnKS52YWx1ZSA9IG1vbWVudChzdG9yYWdlLnRhYmxlRXZlbnRzW2luZGV4QXJyYXlFdmVudHNdLmRhdGUpLmZvcm1hdCgnWVlZWS1NTS1ERFRoaDptbScpO1xyXG4gICAgICAgIGVkaXRFdmVudC5xdWVyeVNlbGVjdG9yKCcuYWRkLWV2ZW50c19fYm9keV9wYXJ0aWNpcGFudC1maWVsZCcpLnZhbHVlID0gcmVhZExpc3RQYXJ0aWNpcGFudHMoaW5kZXhBcnJheUV2ZW50cyk7XHJcbiAgICBcclxuICAgICAgICBpZiAoc3RvcmFnZS50YWJsZUV2ZW50c1tpbmRleEFycmF5RXZlbnRzXS5kZXNjcmlwdGlvbikge1xyXG4gICAgICAgICAgICBlZGl0RXZlbnQucXVlcnlTZWxlY3RvcignLmFkZC1ldmVudHNfX2JvZHlfZGVzY3JpcHRpb24tZmllbGQnKS52YWx1ZSA9IHN0b3JhZ2UudGFibGVFdmVudHNbaW5kZXhBcnJheUV2ZW50c10uZGVzY3JpcHRpb247XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBzdG9yYWdlLmN1cnJlbnRFdmVudCA9IGZpbmRFdmVudDtcclxuICAgIH1cclxufVxyXG5cclxuZnVuY3Rpb24gdXBkYXRlRXZlbnQoKSB7XHJcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnYXJyYXlFdmVudHMnLCBKU09OLnN0cmluZ2lmeShzdG9yYWdlLnRhYmxlRXZlbnRzKSk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIG1vbnRoTWludXMoKSB7XHJcbiAgICBsZXQgcHJldk1heFJvd3MgPSBzdG9yYWdlLmxvbmdQZXJpb2QgPyA2IDogNTtcclxuXHJcbiAgICBzdG9yYWdlLmN1cnJlbnRNb250aCA9IG1vbWVudChzdG9yYWdlLmN1cnJlbnRNb250aCkuYWRkKC0xLCAnbW9udGgnKTtcclxuXHJcbiAgICBjYWxjdWxhdGVEYXRlcygpO1xyXG4gICAgY29ycmVjdExheW91dFRhYmxlKHByZXZNYXhSb3dzKTtcclxuICAgIG91dHB1dFBlcmlvZCgpO1xyXG4gICAgc29ydFRhYmxlRXZlbnRzKCk7XHJcbiAgICBmaWxsVGFibGUoKTtcclxufVxyXG5cclxuZnVuY3Rpb24gbW9udGhQbHVzKCkge1xyXG4gICAgbGV0IHByZXZNYXhSb3dzID0gc3RvcmFnZS5sb25nUGVyaW9kID8gNiA6IDU7XHJcblxyXG4gICAgc3RvcmFnZS5jdXJyZW50TW9udGggPSBtb21lbnQoc3RvcmFnZS5jdXJyZW50TW9udGgpLmFkZCgrMSwgJ21vbnRoJyk7XHJcblxyXG4gICAgY2FsY3VsYXRlRGF0ZXMoKTtcclxuICAgIGNvcnJlY3RMYXlvdXRUYWJsZShwcmV2TWF4Um93cyk7XHJcbiAgICBvdXRwdXRQZXJpb2QoKTtcclxuICAgIHNvcnRUYWJsZUV2ZW50cygpO1xyXG4gICAgZmlsbFRhYmxlKCk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHNldFRvZGF5KCkge1xyXG4gICAgbGV0IHByZXZNYXhSb3dzID0gc3RvcmFnZS5sb25nUGVyaW9kID8gNiA6IDU7XHJcblxyXG4gICAgc3RvcmFnZS5jdXJyZW50TW9udGggPSBtb21lbnQoKS5kYXRlKDEpLmhvdXJzKDApLm1pbnV0ZXMoMCkuc2Vjb25kcygwKTtcclxuXHJcbiAgICBjYWxjdWxhdGVEYXRlcygpO1xyXG4gICAgY29ycmVjdExheW91dFRhYmxlKHByZXZNYXhSb3dzKTtcclxuICAgIG91dHB1dFBlcmlvZCgpO1xyXG4gICAgc29ydFRhYmxlRXZlbnRzKCk7XHJcbiAgICBmaWxsVGFibGUoKTtcclxufVxyXG5cclxuZnVuY3Rpb24gZmllbGRGaW5kRXZlbnRzKGUpIHtcclxuICAgIGxldCBzZWFyY2hpbmdUZXh0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmJsb2NrLWhlYWRlcl9fZmluZF9maWVsZCcpLnZhbHVlO1xyXG4gICAgbGV0IGJ0bkNsZWFyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmJsb2NrLWhlYWRlcl9fZmluZF9idG4tY2xlYXInKTtcclxuXHJcbiAgICBpZiAoZS5rZXlDb2RlID09PSAyNykge1xyXG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5ibG9jay1oZWFkZXJfX2ZpbmRfZmllbGQnKS52YWx1ZSA9ICcnO1xyXG4gICAgICAgIGJ0bkNsZWFyLnN0eWxlLmNvbG9yID0gJyNmZmYnO1xyXG4gICAgICAgIGhpZGVGaW5kRXZlbnRzKCk7XHJcbiAgICB9XHJcbiAgICBlbHNlIGlmIChzZWFyY2hpbmdUZXh0Lmxlbmd0aCA8IDMpIHtcclxuICAgICAgICBidG5DbGVhci5zdHlsZS5jb2xvciA9ICcjZmZmJztcclxuICAgICAgICBoaWRlRmluZEV2ZW50cygpO1xyXG4gICAgfVxyXG4gICAgZWxzZSB7XHJcbiAgICAgICAgYnRuQ2xlYXIuc3R5bGUuY29sb3IgPSAnIzAwMCc7XHJcblxyXG4gICAgICAgIGZpbmRFdmVudHMoKTtcclxuICAgIH1cclxufVxyXG5cclxuZnVuY3Rpb24gZmllbGRGaW5kQnRuQ2xlYXIoKSB7XHJcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYmxvY2staGVhZGVyX19maW5kX2ZpZWxkJykudmFsdWUgPSAnJztcclxuXHJcbiAgICBoaWRlRmluZEV2ZW50cygpO1xyXG5cclxuICAgIGxldCBidG5DbGVhciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5ibG9jay1oZWFkZXJfX2ZpbmRfYnRuLWNsZWFyJyk7XHJcbiAgICBidG5DbGVhci5zdHlsZS5jb2xvciA9ICcjZmZmJztcclxuICAgIGJ0bkNsZWFyLmJsdXIoKTtcclxufVxyXG5cclxuLy8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcbi8vIE91cHV0IGRhdGFcclxuXHJcbmZ1bmN0aW9uIG91dHB1dFBlcmlvZCgpIHtcclxuICAgIGxldCBzZWxlY3RlZFBlcmlvZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zZWN0aW9uLWRhdGVzX19zZWxlY3QtcGVyaW9kX21vbnRoLXRleHQnKTtcclxuICAgIHNlbGVjdGVkUGVyaW9kLnRleHRDb250ZW50ID0gZ2V0U2VsZWN0ZWRQZXJpb2QoKTtcclxufVxyXG5cclxuZnVuY3Rpb24gZ2V0U2VsZWN0ZWRQZXJpb2QoKSB7XHJcbiAgICByZXR1cm4gY2FwaXRhbGl6ZUZpcnN0TGV0dGVyKG1vbWVudChzdG9yYWdlLmN1cnJlbnRNb250aCkubG9jYWxlKCdydScpLmZvcm1hdCgnTU1NTSBZWVlZJykpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBidWlsZExheW91dFRhYmxlKCkge1xyXG4gICAgbGV0IHNlY3Rpb25EYXRlc1RhYmxlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNlY3Rpb24tZGF0ZXNfX3RhYmxlJyk7XHJcblxyXG4gICAgbGV0IG1heFJvd3MgPSBzdG9yYWdlLmxvbmdQZXJpb2QgPyA2IDogNTtcclxuXHJcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IG1heFJvd3M7IGkrKykge1xyXG4gICAgICAgIGxldCBzZWN0aW9uRGF0ZXNUYWJsZVJvdyA9IGdlbmVyYXRlVGFibGVSb3coKTtcclxuICAgICAgICBzZWN0aW9uRGF0ZXNUYWJsZVJvdy5jbGFzc0xpc3QuYWRkKCdzZWN0aW9uLWRhdGVzX190YWJsZV9yb3cnKTtcclxuXHJcbiAgICAgICAgc2VjdGlvbkRhdGVzVGFibGUuYXBwZW5kQ2hpbGQoc2VjdGlvbkRhdGVzVGFibGVSb3cpO1xyXG4gICAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiBnZW5lcmF0ZVRhYmxlUm93KCkge1xyXG4gICAgbGV0IHRhYmxlUm93ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcblxyXG4gICAgZm9yIChsZXQgeSA9IDA7IHkgPCA3OyB5KyspIHtcclxuICAgICAgICBsZXQgc2VjdGlvbkRhdGVzVGFibGVDb2wgPSBnZW5lcmF0ZVRhYmxlUm93Q29sKCk7XHJcbiAgICAgICAgc2VjdGlvbkRhdGVzVGFibGVDb2wuY2xhc3NMaXN0LmFkZCgnc2VjdGlvbi1kYXRlc19fdGFibGVfY29sJyk7XHJcblxyXG4gICAgICAgIHRhYmxlUm93LmFwcGVuZENoaWxkKHNlY3Rpb25EYXRlc1RhYmxlQ29sKTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gdGFibGVSb3c7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGdlbmVyYXRlVGFibGVSb3dDb2woKSB7XHJcbiAgICBsZXQgdGFibGVSb3dDb2wgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgIGxldCBzcGFuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xyXG4gICAgbGV0IGRpdjEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgIGxldCBkaXYyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcblxyXG4gICAgZGl2MS5jbGFzc0xpc3QuYWRkKCdzZWN0aW9uLWRhdGVzX190YWJsZV9jb2wtZXZlbnQnKTtcclxuICAgIGRpdjIuY2xhc3NMaXN0LmFkZCgnc2VjdGlvbi1kYXRlc19fdGFibGVfY29sLXBhcnRpY2lwYW50Jyk7XHJcblxyXG4gICAgdGFibGVSb3dDb2wuYXBwZW5kQ2hpbGQoc3Bhbik7XHJcbiAgICB0YWJsZVJvd0NvbC5hcHBlbmRDaGlsZChkaXYxKTtcclxuICAgIHRhYmxlUm93Q29sLmFwcGVuZENoaWxkKGRpdjIpO1xyXG5cclxuICAgIHN0b3JhZ2Uub3V0cHV0RGF0ZS5hZGQoMSwgJ2RheXMnKTtcclxuICAgIFxyXG4gICAgcmV0dXJuIHRhYmxlUm93Q29sO1xyXG59XHJcblxyXG5mdW5jdGlvbiBjb3JyZWN0TGF5b3V0VGFibGUocHJldk1heFJvd3MpIHtcclxuICAgIGxldCBzZWN0aW9uRGF0ZXNUYWJsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zZWN0aW9uLWRhdGVzX190YWJsZScpO1xyXG5cclxuICAgIGxldCBtYXhSb3dzID0gc3RvcmFnZS5sb25nUGVyaW9kID8gNiA6IDU7XHJcblxyXG4gICAgaWYgKG1heFJvd3MgPiBwcmV2TWF4Um93cykge1xyXG4gICAgICAgIGxldCBzZWN0aW9uRGF0ZXNUYWJsZVJvdyA9IGdlbmVyYXRlVGFibGVSb3coKTtcclxuICAgICAgICBzZWN0aW9uRGF0ZXNUYWJsZVJvdy5jbGFzc0xpc3QuYWRkKCdzZWN0aW9uLWRhdGVzX190YWJsZV9yb3cnKTtcclxuXHJcbiAgICAgICAgc2VjdGlvbkRhdGVzVGFibGUuYXBwZW5kQ2hpbGQoc2VjdGlvbkRhdGVzVGFibGVSb3cpO1xyXG4gICAgfVxyXG4gICAgZWxzZSBpZiAobWF4Um93cyA8IHByZXZNYXhSb3dzKSB7XHJcbiAgICAgICAgbGV0IHNlY3Rpb25EYXRlc1RhYmxlUm93ID0gZ2VuZXJhdGVUYWJsZVJvdygpO1xyXG5cclxuICAgICAgICBzZWN0aW9uRGF0ZXNUYWJsZS5yZW1vdmVDaGlsZChzZWN0aW9uRGF0ZXNUYWJsZS5sYXN0Q2hpbGQpO1xyXG4gICAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiBmaWxsVGFibGUoKSB7XHJcbiAgICBzdG9yYWdlLm91dHB1dERhdGUgPSBtb21lbnQoc3RvcmFnZS5zdGFydERhdGUpO1xyXG5cclxuICAgIGxldCBjb3VudERhdGUgPSAwO1xyXG4gICAgbGV0IGZpcnN0RXZlbnRJbmRleCA9IGZpbmRGaXJzdEV2ZW50SW5kZXgoc3RvcmFnZS5vdXRwdXREYXRlKTtcclxuXHJcbiAgICBsZXQgY3VyVGFibGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2VjdGlvbi1kYXRlc19fdGFibGUnKTtcclxuXHJcbiAgICBmb3IgKGxldCByID0gMDsgciA8IGN1clRhYmxlLmNoaWxkcmVuLmxlbmd0aDsgcisrKSB7XHJcbiAgICAgICAgbGV0IGNoaWxkcmVuUm93ID0gY3VyVGFibGUuY2hpbGRyZW5bcl07XHJcblxyXG4gICAgICAgIGZvciAobGV0IGMgPSAwOyBjIDwgY2hpbGRyZW5Sb3cuY2hpbGRyZW4ubGVuZ3RoOyBjKyspIHtcclxuICAgICAgICAgICAgbGV0IGN1clRhYmxlQ29sID0gY2hpbGRyZW5Sb3cuY2hpbGRyZW5bY107XHJcblxyXG4gICAgICAgICAgICBjdXJUYWJsZUNvbC5jbGFzc0xpc3QucmVtb3ZlKCd0b2RheScpO1xyXG4gICAgICAgICAgICBjdXJUYWJsZUNvbC5jbGFzc0xpc3QucmVtb3ZlKCdldmVudCcpO1xyXG4gICAgICAgICAgICBjdXJUYWJsZUNvbC5yZW1vdmVBdHRyaWJ1dGUoJ2RhdGEtYXJyYXknKTtcclxuXHJcbiAgICAgICAgICAgIGlmIChlcXVhbFRvZGF5KHN0b3JhZ2Uub3V0cHV0RGF0ZS5mb3JtYXQoc3RvcmFnZS5jdXJyZW50Rm9ybWF0KSkpIHtcclxuICAgICAgICAgICAgICAgIGN1clRhYmxlQ29sLmNsYXNzTGlzdC5hZGQoJ3RvZGF5Jyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICAgICAgbGV0IGN1clRhYmxlQ29sU3BhbiA9IGN1clRhYmxlQ29sLnF1ZXJ5U2VsZWN0b3IoJ3NwYW4nKTtcclxuXHJcbiAgICAgICAgICAgIGxldCBjdXJyZW50RGF5ID0gJyc7XHJcblxyXG4gICAgICAgICAgICBpZiAoY291bnREYXRlIDwgNykge1xyXG4gICAgICAgICAgICAgICAgY3VycmVudERheSA9IGNhcGl0YWxpemVGaXJzdExldHRlcihtb21lbnQoc3RvcmFnZS5vdXRwdXREYXRlKS5sb2NhbGUoJ3J1JykuZm9ybWF0KCdkZGRkJykgKyAnLCAnKTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgY3VyVGFibGVDb2xTcGFuLnRleHRDb250ZW50ID0gY3VycmVudERheTtcclxuICAgICAgICAgICAgY3VyVGFibGVDb2xTcGFuLnRleHRDb250ZW50ICs9IHN0b3JhZ2Uub3V0cHV0RGF0ZS5kYXRlKCk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgICAgIGxldCBjdXJUYWJsZUNvbEV2ZW50ID0gY3VyVGFibGVDb2wucXVlcnlTZWxlY3RvcignLnNlY3Rpb24tZGF0ZXNfX3RhYmxlX2NvbC1ldmVudCcpO1xyXG4gICAgICAgICAgICBjdXJUYWJsZUNvbEV2ZW50LnRleHRDb250ZW50ID0gJyc7XHJcbiAgICAgICAgICAgIGxldCBjdXJUYWJsZUNvbFBhcnRpY2lwYW50cyA9IGN1clRhYmxlQ29sLnF1ZXJ5U2VsZWN0b3IoJy5zZWN0aW9uLWRhdGVzX190YWJsZV9jb2wtcGFydGljaXBhbnQnKTtcclxuICAgICAgICAgICAgY3VyVGFibGVDb2xQYXJ0aWNpcGFudHMudGV4dENvbnRlbnQgPSAnJztcclxuICAgICAgICBcclxuICAgICAgICAgICAgaWYgKChmaXJzdEV2ZW50SW5kZXggIT09IC0xKSAmJiAoZmlyc3RFdmVudEluZGV4IDwgc3RvcmFnZS50YWJsZUV2ZW50cy5sZW5ndGgpKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoZXF1YWxEYXRlcyhmaXJzdEV2ZW50SW5kZXgpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY3VyVGFibGVDb2xFdmVudC50ZXh0Q29udGVudCA9IHN0b3JhZ2UudGFibGVFdmVudHNbZmlyc3RFdmVudEluZGV4XS50aXRsZTtcclxuICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICBjdXJUYWJsZUNvbC5jbGFzc0xpc3QuYWRkKCdldmVudCcpO1xyXG4gICAgICAgICAgICAgICAgICAgIGN1clRhYmxlQ29sLnNldEF0dHJpYnV0ZSgnZGF0YS1hcnJheScsIGZpcnN0RXZlbnRJbmRleCk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgYWRkUGFydGljaXBhbnRzKGN1clRhYmxlQ29sUGFydGljaXBhbnRzLCBmaXJzdEV2ZW50SW5kZXgpO1xyXG4gICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgIGZpcnN0RXZlbnRJbmRleCsrO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIGNvdW50RGF0ZSsrO1xyXG4gICAgICAgICAgICBzdG9yYWdlLm91dHB1dERhdGUuYWRkKDEsICdkYXlzJyk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiBhZGRQYXJ0aWNpcGFudHMoY3VyVGFibGVDb2xQYXJ0aWNpcGFudHMsIGZpcnN0RXZlbnRJbmRleCkge1xyXG4gICAgbGV0IGxpc3RQYXJ0aWNpcGFudHMgPSByZWFkTGlzdFBhcnRpY2lwYW50cyhmaXJzdEV2ZW50SW5kZXgpICsgJy4nO1xyXG5cclxuICAgIGN1clRhYmxlQ29sUGFydGljaXBhbnRzLnRleHRDb250ZW50ID0gbGlzdFBhcnRpY2lwYW50cztcclxufVxyXG5cclxuZnVuY3Rpb24gcmVhZExpc3RQYXJ0aWNpcGFudHMoZmlyc3RFdmVudEluZGV4KSB7XHJcbiAgICBsZXQgcXVhbnRQYXJ0aWNpcGFudHMgPSBzdG9yYWdlLnRhYmxlRXZlbnRzW2ZpcnN0RXZlbnRJbmRleF0ucGFydGljaXBhbnRzLmxlbmd0aDtcclxuXHJcbiAgICBsZXQgbGlzdFBhcnRpY2lwYW50cyA9ICcnO1xyXG5cclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcXVhbnRQYXJ0aWNpcGFudHM7IGkrKykge1xyXG4gICAgICAgIGxpc3RQYXJ0aWNpcGFudHMgKz0gc3RvcmFnZS50YWJsZUV2ZW50c1tmaXJzdEV2ZW50SW5kZXhdLnBhcnRpY2lwYW50c1tpXS5uYW1lO1xyXG5cclxuICAgICAgICBpZiAoc3RvcmFnZS50YWJsZUV2ZW50c1tmaXJzdEV2ZW50SW5kZXhdLnBhcnRpY2lwYW50c1tpXS5zdXJuYW1lICE9PSB1bmRlZmluZWQpIHtcclxuICAgICAgICAgICAgbGlzdFBhcnRpY2lwYW50cyArPSAoJyAnICsgc3RvcmFnZS50YWJsZUV2ZW50c1tmaXJzdEV2ZW50SW5kZXhdLnBhcnRpY2lwYW50c1tpXS5zdXJuYW1lKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmIChpID09PSAocXVhbnRQYXJ0aWNpcGFudHMgLSAxKSkge1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgbGlzdFBhcnRpY2lwYW50cyArPSAnLCAnO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gbGlzdFBhcnRpY2lwYW50cztcclxufVxyXG5cclxuZnVuY3Rpb24gaGlkZUZpbmRFdmVudHMoKSB7XHJcbiAgICBsZXQgZmluZEV2ZW50cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5maW5kLWV2ZW50cycpO1xyXG4gICAgZmluZEV2ZW50cy5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG59XHJcblxyXG5mdW5jdGlvbiBmaW5kRXZlbnRzKCkge1xyXG4gICAgbGV0IGZpZWxkRmluZEV2ZW50cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5ibG9jay1oZWFkZXJfX2ZpbmRfZmluZCcpO1xyXG5cclxuICAgIGxldCBmaW5kRXZlbnRzID0gc2VhcmNoRXZlbnRzKCk7XHJcblxyXG4gICAgZmluZEV2ZW50cy5zdHlsZS50b3AgPSAoZmllbGRGaW5kRXZlbnRzLm9mZnNldFRvcCArIGZpZWxkRmluZEV2ZW50cy5vZmZzZXRIZWlnaHQgKyA5KSArICdweCc7XHJcbiAgICBmaW5kRXZlbnRzLnN0eWxlLmxlZnQgPSBmaWVsZEZpbmRFdmVudHMub2Zmc2V0TGVmdCArICdweCc7XHJcbiAgICBmaW5kRXZlbnRzLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xyXG59XHJcblxyXG5mdW5jdGlvbiBzZWFyY2hFdmVudHMoKSB7XHJcbiAgICBsZXQgZmluZEV2ZW50cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5maW5kLWV2ZW50cycpO1xyXG4gICAgbGV0IGZpbmRFdmVudHNMaXN0ID0gZ2V0TGlzdEV2ZW50cygpO1xyXG4gICAgbGV0IHNlYXJjaFZhbHVlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmJsb2NrLWhlYWRlcl9fZmluZF9maWVsZCcpLnZhbHVlLnRvTG93ZXJDYXNlKCk7XHJcblxyXG4gICAgbGV0IHJlc3VsdFNlYXJjaCA9IHN0b3JhZ2UudGFibGVFdmVudHMuZmlsdGVyKChpdGVtKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIGl0ZW0udGl0bGUudG9Mb3dlckNhc2UoKS5zZWFyY2goc2VhcmNoVmFsdWUpICE9PSAtMTtcclxuICAgIH0pO1xyXG5cclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcmVzdWx0U2VhcmNoLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgbGV0IGZpbmRFdmVudHNSb3cgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgICAgICBmaW5kRXZlbnRzUm93LmNsYXNzTGlzdC5hZGQoJ2ZpbmQtZXZlbnRzX19saXN0X3JvdycpO1xyXG5cclxuICAgICAgICBsZXQgcm93VGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgICAgICByb3dUaXRsZS50ZXh0Q29udGVudCA9IHJlc3VsdFNlYXJjaFtpXS50aXRsZTtcclxuICAgICAgICByb3dUaXRsZS5jbGFzc0xpc3QuYWRkKCdmaW5kLWV2ZW50c19fbGlzdF9yb3ctdGl0bGUnKTtcclxuXHJcbiAgICAgICAgbGV0IHJvd0luZm8gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgICAgICByb3dJbmZvLnRleHRDb250ZW50ID0gbW9tZW50KHJlc3VsdFNlYXJjaFtpXS5kYXRlKS5mb3JtYXQoJ0RvIE1NTU0nKTtcclxuICAgICAgICByb3dJbmZvLmNsYXNzTGlzdC5hZGQoJ2ZpbmQtZXZlbnRzX19saXN0X3Jvdy1JbmZvJyk7XHJcblxyXG4gICAgICAgIGZpbmRFdmVudHNSb3cuYXBwZW5kQ2hpbGQocm93VGl0bGUpO1xyXG4gICAgICAgIGZpbmRFdmVudHNSb3cuYXBwZW5kQ2hpbGQocm93SW5mbyk7XHJcblxyXG4gICAgICAgIGZpbmRFdmVudHNMaXN0LmFwcGVuZENoaWxkKGZpbmRFdmVudHNSb3cpO1xyXG4gICAgfVxyXG5cclxuICAgIGZpbmRFdmVudHMuYXBwZW5kQ2hpbGQoZmluZEV2ZW50c0xpc3QpO1xyXG5cclxuICAgIHJldHVybiBmaW5kRXZlbnRzO1xyXG59XHJcblxyXG5mdW5jdGlvbiBnZXRMaXN0RXZlbnRzKCkge1xyXG4gICAgbGV0IGZpbmRFdmVudHNMaXN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmZpbmQtZXZlbnRzX19saXN0Jyk7XHJcblxyXG4gICAgd2hpbGUgKGZpbmRFdmVudHNMaXN0Lmhhc0NoaWxkTm9kZXMoKSkge1xyXG4gICAgICAgIGZpbmRFdmVudHNMaXN0LnJlbW92ZUNoaWxkKGZpbmRFdmVudHNMaXN0Lmxhc3RDaGlsZCk7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIGZpbmRFdmVudHNMaXN0O1xyXG59XHJcblxyXG4vLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuLy8gT3RoZXJcclxuXHJcbmZ1bmN0aW9uIGNhbGN1bGF0ZURhdGVzKCkge1xyXG4gICAgbGV0IHNoaWZ0RGF0ZSA9IC0oc3RvcmFnZS5jdXJyZW50TW9udGguZGF5KCkgLSAxKTtcclxuXHJcbiAgICBpZiAoc3RvcmFnZS5jdXJyZW50TW9udGguZGF5KCkgPT09IDApIHtcclxuICAgICAgICBzaGlmdERhdGUgPSAtNjtcclxuICAgIH1cclxuXHJcbiAgICBzdG9yYWdlLnN0YXJ0RGF0ZSA9IG1vbWVudChzdG9yYWdlLmN1cnJlbnRNb250aCkuYWRkKHNoaWZ0RGF0ZSwgJ2RheXMnKTtcclxuICAgIHN0b3JhZ2UuZW5kRGF0ZSA9IG1vbWVudChzdG9yYWdlLnN0YXJ0RGF0ZSkuYWRkKDQyLCAnZGF5cycpLmFkZCgtMSwnc2Vjb25kcycpO1xyXG4gICAgc3RvcmFnZS5vdXRwdXREYXRlID0gbW9tZW50KHN0b3JhZ2Uuc3RhcnREYXRlKTtcclxuXHJcbiAgICBpZiAoc3RvcmFnZS5lbmREYXRlLmRhdGUoKSA+IDYgKSB7XHJcbiAgICAgICAgc3RvcmFnZS5lbmREYXRlLmFkZCgtNywgJ2RheXMnKTtcclxuICAgICAgICBzdG9yYWdlLmxvbmdQZXJpb2QgPSBmYWxzZTtcclxuICAgIH1cclxuICAgIGVsc2Uge1xyXG4gICAgICAgIHN0b3JhZ2UubG9uZ1BlcmlvZCA9IHRydWU7XHJcbiAgICB9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGNhcGl0YWxpemVGaXJzdExldHRlcihzdHJpbmcpIHtcclxuICAgIHJldHVybiBzdHJpbmcuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyBzdHJpbmcuc2xpY2UoMSk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGNsb3NlQWRkRXZlbnQoKSB7XHJcbiAgICBsZXQgYWRkRXZlbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYWRkLWV2ZW50cycpO1xyXG5cclxuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5hZGQtZXZlbnRzX19ib2R5X3RpdGxlLWZpZWxkJykudmFsdWUgPSAnJztcclxuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5hZGQtZXZlbnRzX19ib2R5X2RhdGUtZmllbGQnKS52YWx1ZSA9ICcnO1xyXG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmFkZC1ldmVudHNfX2JvZHlfcGFydGljaXBhbnQtZmllbGQnKS52YWx1ZSA9ICcnO1xyXG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmFkZC1ldmVudHNfX2JvZHlfZGVzY3JpcHRpb24tZmllbGQnKS52YWx1ZSA9ICcnO1xyXG5cclxuICAgIGFkZEV2ZW50LnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGNyZWF0ZUV2ZW50KCkge1xyXG4gICAgbGV0IG5ld0V2ZW50ID0gdG9Gb3JtRXZlbnQoKTtcclxuXHJcbiAgICBsZXQgaW5kZXhFdmVudCA9IGZpbmREYXRlRXZlbnQobmV3RXZlbnQpO1xyXG5cclxuICAgIGlmIChpbmRleEV2ZW50ID09PSAtMSkge1xyXG4gICAgICAgIGluZGV4RXZlbnQgPSBzdG9yYWdlLnRhYmxlRXZlbnRzLmxlbmd0aDtcclxuICAgIH1cclxuXHJcbiAgICBzYXZlRXZlbnQobmV3RXZlbnQsIGluZGV4RXZlbnQsIHRydWUpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBkZWxldGVFdmVudCgpIHtcclxuICAgIGxldCBpbmRleEFycmF5RXZlbnRzID0gK3N0b3JhZ2UuY3VycmVudEV2ZW50LmdldEF0dHJpYnV0ZSgnZGF0YS1hcnJheScpO1xyXG5cclxuICAgIHN0b3JhZ2UudGFibGVFdmVudHMuc3BsaWNlKGluZGV4QXJyYXlFdmVudHMsIDEpO1xyXG5cclxuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdhcnJheUV2ZW50cycsIEpTT04uc3RyaW5naWZ5KHN0b3JhZ2UudGFibGVFdmVudHMpKTtcclxuXHJcbiAgICBzdG9yYWdlLmN1cnJlbnRFdmVudC5zdHlsZS5ib3JkZXIgPSBzdG9yYWdlLnByZXZpb3NTdHlsZUJvcmRlcjtcclxufVxyXG5cclxuZnVuY3Rpb24gZXF1YWxEYXRlcyhpbmRleEV2ZW50KSB7XHJcbiAgICByZXR1cm4gbW9tZW50KHN0b3JhZ2UudGFibGVFdmVudHNbaW5kZXhFdmVudF0uZGF0ZSkuaG91cnMoMCkubWludXRlcygwKS5zZWNvbmRzKDApLmZvcm1hdChzdG9yYWdlLmN1cnJlbnRGb3JtYXQpXHJcbiAgICAgICAgICAgPT09IG1vbWVudChzdG9yYWdlLm91dHB1dERhdGUpLmhvdXJzKDApLm1pbnV0ZXMoMCkuc2Vjb25kcygwKS5mb3JtYXQoc3RvcmFnZS5jdXJyZW50Rm9ybWF0KTtcclxufVxyXG5cclxuZnVuY3Rpb24gZXF1YWxUb2RheShjdXJEYXRlKSB7XHJcbiAgICByZXR1cm4gbW9tZW50KCkuaG91cnMoMCkubWludXRlcygwKS5zZWNvbmRzKDApLmZvcm1hdChzdG9yYWdlLmN1cnJlbnRGb3JtYXQpXHJcbiAgICAgICAgICAgPT09IGN1ckRhdGU7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGZpbmREYXRlRXZlbnQoZXZlbnQpIHtcclxuICAgIGxldCByZXN1bHQgPSAtMTtcclxuXHJcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHN0b3JhZ2UudGFibGVFdmVudHMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICBpZiAobW9tZW50KHN0b3JhZ2UudGFibGVFdmVudHNbaV0uZGF0ZSkuaG91cnMoMCkubWludXRlcygwKS5zZWNvbmRzKDApLmZvcm1hdChzdG9yYWdlLmN1cnJlbnRGb3JtYXQpXHJcbiAgICAgICAgICAgID09PSBtb21lbnQoZXZlbnQuZGF0ZSkuaG91cnMoMCkubWludXRlcygwKS5zZWNvbmRzKDApLmZvcm1hdChzdG9yYWdlLmN1cnJlbnRGb3JtYXQpKSB7XHJcbiAgICAgICAgICAgIHJlc3VsdCA9IGk7XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHJldHVybiByZXN1bHQ7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGZpbmRGaXJzdEV2ZW50SW5kZXgoc3RhcnREYXRlKSB7XHJcbiAgICBsZXQgY3VySW5kZXggPSAtMTtcclxuXHJcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHN0b3JhZ2UudGFibGVFdmVudHMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICBpZiAobW9tZW50KHN0b3JhZ2UudGFibGVFdmVudHNbaV0uZGF0ZSkgPj0gbW9tZW50KHN0YXJ0RGF0ZSkpIHtcclxuICAgICAgICAgICAgY3VySW5kZXggPSBpO1xyXG4gICAgICAgICAgICBicmVhaztcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIGN1ckluZGV4O1xyXG59XHJcblxyXG5mdW5jdGlvbiByZWFkRGF0YSgpIHtcclxuICAgIHN0b3JhZ2UudGFibGVFdmVudHMgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdhcnJheUV2ZW50cycpKTtcclxuXHJcbiAgICBpZiAoc3RvcmFnZS50YWJsZUV2ZW50cyA9PT0gbnVsbCkge1xyXG4gICAgICAgIGxldCB4aHIgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTtcclxuXHJcbiAgICAgICAgeGhyLm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgaWYgKHhoci5yZWFkeVN0YXRlID09PSA0KSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoeGhyLnN0YXR1cyA9PT0gMjAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgc3RvcmFnZS50YWJsZUV2ZW50cyA9IEpTT04ucGFyc2UoeGhyLnJlc3BvbnNlVGV4dCkuZXZlbnRzO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICBzb3J0VGFibGVFdmVudHModHJ1ZSk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIGZpbGxUYWJsZSgpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB4aHIub3BlbignR0VUJywgJy4vZXZlbnRzLmpzb24nLCB0cnVlKTtcclxuICAgICAgICB4aHIuc2VuZCgpO1xyXG4gICAgICAgIH1cclxuICAgIGVsc2Uge1xyXG4gICAgICAgIHNvcnRUYWJsZUV2ZW50cyh0cnVlKTtcclxuXHJcbiAgICAgICAgZmlsbFRhYmxlKCk7XHJcbiAgICB9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHJlbW92ZUFsbEFycm93cyhlZGl0RXZlbnQpIHtcclxuICAgIGVkaXRFdmVudC5jbGFzc0xpc3QucmVtb3ZlKCd0b3AnKTtcclxuICAgIGVkaXRFdmVudC5jbGFzc0xpc3QucmVtb3ZlKCdsZWZ0Jyk7XHJcbiAgICBlZGl0RXZlbnQuY2xhc3NMaXN0LnJlbW92ZSgnYm90dG9tJyk7XHJcbiAgICBlZGl0RXZlbnQuY2xhc3NMaXN0LnJlbW92ZSgncmlnaHQnKTtcclxufVxyXG5cclxuZnVuY3Rpb24gc2F2ZUV2ZW50KG5ld0V2ZW50LCBpbmRleEV2ZW50LCBuZWVkU29ydGluZyA9IGZhbHNlKSB7XHJcbiAgICBzdG9yYWdlLnRhYmxlRXZlbnRzW2luZGV4RXZlbnRdID0gbmV3RXZlbnQ7XHJcbiAgXHJcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnYXJyYXlFdmVudHMnLCBKU09OLnN0cmluZ2lmeShzdG9yYWdlLnRhYmxlRXZlbnRzKSk7XHJcblxyXG4gICAgdXBkYXRlVGFibGVDb2woaW5kZXhFdmVudCk7XHJcblxyXG4gICAgc3RvcmFnZS5uZWVkU29ydGluZyA9IG5lZWRTb3J0aW5nO1xyXG59XHJcblxyXG5mdW5jdGlvbiBzb3J0VGFibGVFdmVudHMobmVjZXNzYXJpbHkgPSBmYWxzZSkge1xyXG4gICAgaWYgKHN0b3JhZ2UubmVlZFNvcnRpbmcgfHwgbmVjZXNzYXJpbHkpIHtcclxuICAgICAgICBzdG9yYWdlLnRhYmxlRXZlbnRzLnNvcnQoKGZpcnN0LCBzZWNvbmQpID0+IChtb21lbnQoZmlyc3QuZGF0ZSkgLSBtb21lbnQoc2Vjb25kLmRhdGUpKSk7XHJcblxyXG4gICAgICAgIHN0b3JhZ2UubmVlZFNvcnRpbmcgPSBmYWxzZTtcclxuICAgIH1cclxufVxyXG5cclxuZnVuY3Rpb24gdG9Gb3JtRXZlbnQoKSB7XHJcbiAgICBsZXQgbmV3RXZlbnQgPSB7XHJcbiAgICAgICAgJ2lkJzogMCxcclxuICAgICAgICAndGl0bGUnOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYWRkLWV2ZW50c19fYm9keV90aXRsZS1maWVsZCcpLnZhbHVlLFxyXG4gICAgICAgICdkYXRlJzogZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmFkZC1ldmVudHNfX2JvZHlfZGF0ZS1maWVsZCcpLnZhbHVlLFxyXG4gICAgICAgICdwYXJ0aWNpcGFudHMnOiBbXSxcclxuICAgICAgICAnZGVzY3JpcHRpb24nOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYWRkLWV2ZW50c19fYm9keV9kZXNjcmlwdGlvbi1maWVsZCcpLnZhbHVlLFxyXG4gICAgfVxyXG5cclxuICAgIGxldCBhcnJQYXJ0aXNpcGFudHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYWRkLWV2ZW50c19fYm9keV9wYXJ0aWNpcGFudC1maWVsZCcpLnZhbHVlLnNwbGl0KCcsJyk7XHJcblxyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhcnJQYXJ0aXNpcGFudHMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICBsZXQgYXJyTmFtZSA9IGFyclBhcnRpc2lwYW50c1tpXS50cmltKCkuc3BsaXQoJyAnKTtcclxuICAgIFxyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIG5ld0V2ZW50LnBhcnRpY2lwYW50cy5wdXNoKHtcclxuICAgICAgICAgICAgICAgICdpZCc6IDAsXHJcbiAgICAgICAgICAgICAgICAnbmFtZSc6IGFyck5hbWVbMF0sXHJcbiAgICAgICAgICAgICAgICAnc3VybmFtZSc6IGFyck5hbWVbMV1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNhdGNoIHt9XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIG5ld0V2ZW50O1xyXG59XHJcblxyXG5mdW5jdGlvbiB1cGRhdGVUYWJsZUNvbChpbmRleEV2ZW50KSB7XHJcbiAgICBzdG9yYWdlLm91dHB1dERhdGUgPSBtb21lbnQoc3RvcmFnZS5zdGFydERhdGUpO1xyXG5cclxuICAgIGxldCBjdXJUYWJsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zZWN0aW9uLWRhdGVzX190YWJsZScpO1xyXG5cclxuICAgIGZvciAobGV0IHIgPSAwOyByIDwgY3VyVGFibGUuY2hpbGRyZW4ubGVuZ3RoOyByKyspIHtcclxuICAgICAgICBsZXQgY2hpbGRyZW5Sb3cgPSBjdXJUYWJsZS5jaGlsZHJlbltyXTtcclxuXHJcbiAgICAgICAgZm9yIChsZXQgYyA9IDA7IGMgPCBjaGlsZHJlblJvdy5jaGlsZHJlbi5sZW5ndGg7IGMrKykge1xyXG4gICAgICAgICAgICBsZXQgY3VyVGFibGVDb2wgPSBjaGlsZHJlblJvdy5jaGlsZHJlbltjXTtcclxuICAgICAgICBcclxuICAgICAgICAgICAgaWYgKGVxdWFsRGF0ZXMoaW5kZXhFdmVudCkpIHtcclxuICAgICAgICAgICAgICAgIGFkZE5ld0V2ZW50KGN1clRhYmxlQ29sLCBpbmRleEV2ZW50KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgICAgICBzdG9yYWdlLm91dHB1dERhdGUuYWRkKDEsICdkYXlzJyk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiBhZGROZXdFdmVudChjdXJUYWJsZUNvbCwgaW5kZXhFdmVudCkge1xyXG4gICAgY3VyVGFibGVDb2wuY2xhc3NMaXN0LmFkZCgnZXZlbnQnKTtcclxuXHJcbiAgICBjdXJUYWJsZUNvbC5zZXRBdHRyaWJ1dGUoJ2RhdGEtYXJyYXknLCBpbmRleEV2ZW50KTtcclxuXHJcbiAgICBsZXQgY3VyVGFibGVDb2xFdmVudCA9IGN1clRhYmxlQ29sLnF1ZXJ5U2VsZWN0b3IoJy5zZWN0aW9uLWRhdGVzX190YWJsZV9jb2wtZXZlbnQnKTtcclxuICAgIGN1clRhYmxlQ29sRXZlbnQudGV4dENvbnRlbnQgPSAnJztcclxuICAgIGxldCBjdXJUYWJsZUNvbFBhcnRpY2lwYW50cyA9IGN1clRhYmxlQ29sLnF1ZXJ5U2VsZWN0b3IoJy5zZWN0aW9uLWRhdGVzX190YWJsZV9jb2wtcGFydGljaXBhbnQnKTtcclxuICAgIGN1clRhYmxlQ29sUGFydGljaXBhbnRzLnRleHRDb250ZW50ID0gJyc7XHJcblxyXG4gICAgY3VyVGFibGVDb2xFdmVudC50ZXh0Q29udGVudCA9IHN0b3JhZ2UudGFibGVFdmVudHNbaW5kZXhFdmVudF0udGl0bGU7XHJcblxyXG4gICAgYWRkUGFydGljaXBhbnRzKGN1clRhYmxlQ29sUGFydGljaXBhbnRzLCBpbmRleEV2ZW50KTtcclxufVxyXG5cclxuZnVuY3Rpb24gdmVyaWZlRXZlbnQoKSB7XHJcbiAgICBpZiAoIWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5hZGQtZXZlbnRzX19ib2R5X3RpdGxlLWZpZWxkJykudmFsdWUpIHtcclxuICAgICAgICBhbGVydCgnRW1wdHkgdGl0bGUhJyk7XHJcblxyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxuXHJcbiAgICBsZXQgZGF0ZVRpbWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYWRkLWV2ZW50c19fYm9keV9kYXRlLWZpZWxkJyk7XHJcblxyXG4gICAgaWYgKCFkYXRlVGltZS52YWx1ZSkge1xyXG4gICAgICAgIGlmIChkYXRlVGltZS52YWxpZGF0aW9uTWVzc2FnZSkge1xyXG4gICAgICAgICAgICBhbGVydChkYXRlVGltZS52YWxpZGF0aW9uTWVzc2FnZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBhbGVydCgnRW1wdHkgZGF0ZSEnKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gdHJ1ZTtcclxufSJdfQ==
