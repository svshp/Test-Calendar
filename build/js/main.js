"use strict";let storage={curentFormat:"YYYY-MM-DD",curentMonth:null,longPeriod:!1,tableEvents:null,startDate:null,endDate:null,outputDate:null};function setUpButtons(){document.querySelector(".block-header__btn-add").addEventListener("click",addEvent),document.querySelector(".block-header__btn-update").addEventListener("click",updateEvent),document.querySelector(".block-header__find_find").addEventListener("click",findEvents),document.querySelector(".section-dates__select-period_month-minus").addEventListener("click",monthMinus),document.querySelector(".section-dates__select-period_month-plus").addEventListener("click",monthPlus),document.querySelector(".section-dates__select-period_today").addEventListener("click",setToday)}function addEvent(){console.log("addEvent()")}function updateEvent(){localStorage.setItem("arrayEvents",JSON.stringify(storage.tableEvents))}function findEvents(){console.log("findEvents()")}function monthMinus(){let e=storage.longPeriod?6:5;storage.curentMonth=moment(storage.curentMonth).add(-1,"month"),calculateDates(),correctLayoutTable(e),outputPeriod(),fillTable()}function monthPlus(){let e=storage.longPeriod?6:5;storage.curentMonth=moment(storage.curentMonth).add(1,"month"),calculateDates(),correctLayoutTable(e),outputPeriod(),fillTable()}function setToday(){let e=storage.longPeriod?6:5;storage.curentMonth=moment().date(1).hours(0).minutes(0).seconds(0),calculateDates(),correctLayoutTable(e),outputPeriod(),fillTable()}function calculateDates(){let e=-(storage.curentMonth.day()-1);0===storage.curentMonth.day()&&(e=-6),storage.startDate=moment(storage.curentMonth).add(e,"days"),storage.endDate=moment(storage.startDate).add(42,"days").add(-1,"seconds"),storage.outputDate=moment(storage.startDate),storage.endDate.date()>6?(storage.endDate.add(-7,"days"),storage.longPeriod=!1):storage.longPeriod=!0}function buildLayoutTable(){let e=document.querySelector(".section-dates__table"),t=storage.longPeriod?6:5;for(let a=0;a<t;a++){let t=generateTableRow();t.classList.add("section-dates__table_row"),e.appendChild(t)}}function correctLayoutTable(e){let t=document.querySelector(".section-dates__table"),a=storage.longPeriod?6:5;if(a>e){let e=generateTableRow();e.classList.add("section-dates__table_row"),t.appendChild(e)}else if(a<e){generateTableRow();t.removeChild(t.lastChild)}}function generateTableRow(){let e=document.createElement("div");for(let t=0;t<7;t++){let t=generateTableRowCol();t.classList.add("section-dates__table_col"),e.appendChild(t)}return e}function generateTableRowCol(){let e=document.createElement("div"),t=document.createElement("span"),a=document.createElement("div"),o=document.createElement("div");return a.classList.add("section-dates__table_col-event"),o.classList.add("section-dates__table_col-participant"),e.appendChild(t),e.appendChild(a),e.appendChild(o),storage.outputDate.add(1,"days"),e}function outputPeriod(){document.querySelector(".section-dates__select-period_month-text").textContent=getSelectedPeriod()}function getSelectedPeriod(){return moment(storage.curentMonth).format("MMMM YYYY")}function fillTable(){storage.outputDate=moment(storage.startDate);let e=0,t=findFirstEventIndex(storage.outputDate),a=document.querySelector(".section-dates__table");for(let o=0;o<a.children.length;o++){let n=a.children[o];for(let a=0;a<n.children.length;a++){let o=n.children[a],s=o.querySelector("span");o.classList.remove("today"),o.classList.remove("event"),s.textContent=e<7?storage.outputDate.format("dddd")+", ":"",s.textContent+=storage.outputDate.date(),storage.outputDate.format(storage.curentFormat)===moment().hours(0).minutes(0).seconds(0).format(storage.curentFormat)&&o.classList.add("today");let r=o.querySelector(".section-dates__table_col-event");r.textContent="";let l=o.querySelector(".section-dates__table_col-participant");l.textContent="",-1!==t&&t<storage.tableEvents.length&&equalDates(t)&&(r.textContent=storage.tableEvents[t].title,o.classList.add("event"),addParticipants(l,t),t++),e++,storage.outputDate.add(1,"days")}}}function findFirstEventIndex(e){let t=-1;for(let a=0;a<storage.tableEvents.length;a++)if(moment(storage.tableEvents[a].date)>=moment(e)){t=a;break}return t}function equalDates(e){return moment(storage.tableEvents[e].date).hours(0).minutes(0).seconds(0).format(storage.curentFormat)===moment(storage.outputDate).hours(0).minutes(0).seconds(0).format(storage.curentFormat)}function addParticipants(e,t){let a=storage.tableEvents[t].participants.length,o="";for(let e=0;e<a;e++)o+=storage.tableEvents[t].participants[e].name+" "+storage.tableEvents[t].participants[e].surname,o+=e===a-1?".":", ";e.textContent=o}function readData(){if(storage.tableEvents=JSON.parse(localStorage.getItem("arrayEvents")),null===storage.tableEvents){let e=new XMLHttpRequest;e.onreadystatechange=function(){4===e.readyState&&200===e.status&&(storage.tableEvents=JSON.parse(e.responseText).events,storage.tableEvents.sort((e,t)=>moment(e.date)-moment(t.date)),fillTable())},e.open("GET","./events.json",!0),e.send()}else storage.tableEvents.sort((e,t)=>moment(e.date)-moment(t.date)),fillTable()}window.onload=function(){storage.curentMonth=moment().date(1).hours(0).minutes(0).seconds(0),setUpButtons(),calculateDates(),buildLayoutTable(),outputPeriod(),readData()};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
